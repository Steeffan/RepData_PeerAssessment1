mutate(steps=ifelse(is.na(steps.x), steps.y, steps.x)) %>%
select(steps,date,interval) %>%
arrange(date,interval)
activity2 <- mutate(activity2, daytype=factor(ifelse(wday(date) %in% c(1,7), "weekend", "weekday")))
filter(activity2, daytype="weekend")
filter(activity2, daytype=="weekend")
?with
with(filter(activity2, daytype=="weekend"), {
plot(interval, steps, type="l")
})
plot(stepsinterval$interval, stepsinterval$steps, type="l")
with(filter(activity2, daytype=="weekend"), {
plot(interval, steps, type="l")
})
stepsinterval2 <- activity2 %>%
group_by(dyatype, interval) %>%
summarise(steps=mean(steps, na.rm=TRUE))
stepsinterval2 <- activity2 %>%
group_by(daytype, interval) %>%
summarise(steps=mean(steps))
with(filter(stepsinterval2, daytype=="weekend"), {
plot(interval, steps, type="l")
})
library(ggplot2)
g <-    ggplot(stepsinterval2, aes(interval, Steps)) +
geom_point(size=3) +
facet_wrap(~daytype, ncol=2)
g
g
ggplot(stepsinterval2, aes(interval, Steps)) +
geom_point(size=3) +
facet_wrap(~daytype, ncol=2)
g <-    ggplot(stepsinterval2, aes(interval, steps)) +
geom_point(size=3) +
facet_wrap(~daytype, ncol=2)
g
g <-    ggplot(stepsinterval2, aes(interval, steps)) +
geom_point(size=3) +
facet_wrap(~daytype, ncol=1)
g
?geom_line
g <-    ggplot(stepsinterval2, aes(interval, steps)) +
geom_line() +
facet_wrap(~daytype, ncol=1)
g
activity2 <- merge(activity,stepsinterval, by="interval") %>%
mutate(steps=ifelse(is.na(steps.x), steps.y, steps.x)) %>%
select(steps,date,interval) %>%
arrange(date,interval)
activity2 <- mutate(activity2, daytype=factor(ifelse(wday(date) %in% c(2,3,4,5,6), "weekday", "weekend")))
stepsinterval2 <- activity2 %>%
group_by(daytype, interval) %>%
summarise(steps=mean(steps))
g <-    ggplot(stepsinterval2, aes(interval, steps)) +
geom_line() +
facet_wrap(~daytype, ncol=1)
g
g <-    ggplot(stepsinterval2, aes(interval, steps)) +
geom_line() +
facet_wrap(~daytype)
g
g <-    ggplot(stepsinterval2, aes(interval, steps)) +
geom_line() +
facet_wrap(~daytype, ncol=1)
g
library(lattice)
xyplot(steps~interval | daytype, data = activity2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
layout = c(1,2))
library(lattice)
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
layout = c(1,2))
activity2 <- merge(activity,stepsinterval, by="interval") %>%
mutate(steps=ifelse(is.na(steps.x), steps.y, steps.x)) %>%
select(steps,date,interval) %>%
arrange(date,interval)
activity2 <- mutate(activity2, daytype=factor(ifelse(wday(date) %in% c(1,7), "weekend", "weekday")))
stepsinterval2 <- activity2 %>%
group_by(daytype, interval) %>%
summarise(steps=mean(steps))
library(ggplot2)
g <-    ggplot(stepsinterval2, aes(interval, steps)) +
geom_line() +
facet_wrap(~daytype, ncol=1)
g
library(lattice)
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
layout = c(1,2))
g <-    ggplot(stepsinterval2, aes(interval, steps)) +
geom_line() +
facet_wrap(~daytype, ncol=1)
g
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
layout = c(1,2))
xyplot
?xyplot
library(lattice)
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
aspect="fill",
layout = c(1,2))
## Tonga Trench Earthquakes
Depth <- equal.count(quakes$depth, number=8, overlap=.1)
xyplot(lat ~ long | Depth, data = quakes)
update(trellis.last.object(),
strip = strip.custom(strip.names = TRUE, strip.levels = TRUE),
par.strip.text = list(cex = 0.75),
aspect = "iso")
## Examples with data from `Visualizing Data' (Cleveland, 1993) obtained
## from <a href="http://cm.bell-labs.com/cm/ms/departments/sia/wsc/</p>
<p>EE" title="http://cm.bell-labs.com/cm/ms/departments/sia/wsc/</p>
<p>EE">http://cm.bell-labs.com/cm/ms/departments/sia/wsc/</p>
<p>EE</p></a> <- equal.count(ethanol$E, number=9, overlap=1/4)
## Constructing panel functions on the fly; prepanel
xyplot(NOx ~ C | EE, data = ethanol,
prepanel = function(x, y) prepanel.loess(x, y, span = 1),
xlab = "Compression Ratio", ylab = "NOx (micrograms/J)",
panel = function(x, y) {
panel.grid(h = -1, v = 2)
panel.xyplot(x, y)
panel.loess(x, y, span=1)
},
aspect = "xy")
## Extended formula interface
xyplot(Sepal.Length + Sepal.Width ~ Petal.Length + Petal.Width | Species,
data = iris, scales = "free", layout = c(2, 2),
auto.key = list(x = .6, y = .7, corner = c(0, 0)))
## user defined panel functions
states <- data.frame(state.x77,
state.name = dimnames(state.x77)[[1]],
state.region = state.region)
xyplot(Murder ~ Population | state.region, data = states,
groups = state.name,
panel = function(x, y, subscripts, groups) {
ltext(x = x, y = y, labels = groups[subscripts], cex=1,
fontfamily = "HersheySans")
})
## Stacked bar chart
barchart(yield ~ variety | site, data = barley,
groups = year, layout = c(1,6), stack = TRUE,
auto.key = list(space = "right"),
ylab = "Barley Yield (bushels/acre)",
scales = list(x = list(rot = 45)))
bwplot(voice.part ~ height, data=singer, xlab="Height (inches)")
dotplot(variety ~ yield | year * site, data=barley)
## Grouped dot plot showing anomaly at Morris
dotplot(variety ~ yield | site, data = barley, groups = year,
key = simpleKey(levels(barley$year), space = "right"),
xlab = "Barley Yield (bushels/acre) ",
aspect=0.5, layout = c(1,6), ylab=NULL)
stripplot(voice.part ~ jitter(height), data = singer, aspect = 1,
jitter.data = TRUE, xlab = "Height (inches)")
## Interaction Plot
xyplot(decrease ~ treatment, OrchardSprays, groups = rowpos,
type = "a",
auto.key =
list(space = "right", points = FALSE, lines = TRUE))
## longer version with no x-ticks
## Not run:
bwplot(decrease ~ treatment, OrchardSprays, groups = rowpos,
panel = "panel.superpose",
panel.groups = "panel.linejoin",
xlab = "treatment",
key = list(lines = Rows(trellis.par.get("superpose.line"),
c(1:7, 1)),
text = list(lab = as.character(unique(OrchardSprays$rowpos))),
columns = 4, title = "Row position"))
## End(Not run)
Depth <- equal.count(quakes$depth, number=8, overlap=.1)
xyplot(lat ~ long | Depth, data = quakes)
update(trellis.last.object(),
strip = strip.custom(strip.names = TRUE, strip.levels = TRUE),
par.strip.text = list(cex = 0.75),
aspect = "iso")
xyplot(NOx ~ C | EE, data = ethanol,
prepanel = function(x, y) prepanel.loess(x, y, span = 1),
xlab = "Compression Ratio", ylab = "NOx (micrograms/J)",
panel = function(x, y) {
panel.grid(h = -1, v = 2)
panel.xyplot(x, y)
panel.loess(x, y, span=1)
},
aspect = "xy")
xyplot(NOx ~ C | EE, data = ethanol,
prepanel = function(x, y) prepanel.loess(x, y, span = 1),
xlab = "Compression Ratio", ylab = "NOx (micrograms/J)",
panel = function(x, y) {
panel.grid(h = -1, v = 2)
panel.xyplot(x, y)
panel.loess(x, y, span=1)
},
aspect = "xy")
EE <- equal.count(ethanol$E, number=9, overlap=1/4)
xyplot(NOx ~ C | EE, data = ethanol,
prepanel = function(x, y) prepanel.loess(x, y, span = 1),
xlab = "Compression Ratio", ylab = "NOx (micrograms/J)",
panel = function(x, y) {
panel.grid(h = -1, v = 2)
panel.xyplot(x, y)
panel.loess(x, y, span=1)
},
aspect = "xy")
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
panel.grid(h = -1, v = 2)
layout = c(1,2))
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
panel.grid(h = -1, v = 2),
layout = c(1,2))
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
layout = c(1,2),
panel = function(x, y) {
panel.grid(h = -1, v = 2)
panel.xyplot(x, y)
panel.loess(x, y, span=1)
})
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
layout = c(1,2),
panel = function(x, y) {
panel.grid(h = -1, v = 2)
})
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
layout = c(1,2),
panel = function(x, y) {
panel.grid(h = -1, v = 2)
panel.loess(x, y, span=1)
})
?panel.grid
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
layout = c(1,2),
panel = function(x, y) {
panel.grid(h = -1, v = 2)
panel.line()
})
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
layout = c(1,2),
panel = function(x, y) {
panel.grid(h = -1, v = 2)
panel.line(...)
})
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
layout = c(1,2),
panel = function(x, y) {
panel.grid(h = -1, v = 2)
panel.abline(...)
})
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
layout = c(1,2),
panel = function(x, y) {
panel.grid(h = -1, v = 2)
panel.stripplot(...)
})
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
layout = c(1,2),
panel = function(x, y) {
panel.grid(h = -1, v = 2)
panel.histogram(...)
})
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
layout = c(1,2),
panel = function(x, y) {
panel.grid(h = -1, v = 1)
panel.histogram(...)
})
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
layout = c(1,2),
panel = function(x, y) {
panel.grid(h = -1, v = -1)
panel.histogram(...)
})
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
layout = c(1,2))
xyplot
str(xyplot)
?xyplot
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
layout = c(1,2)
panel = function(x, y) {
panel.grid(h = -1, v = -1)
panel.xyplot(...)
})
?panel.grid
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
layout = c(1,2)
panel = function(x, y) {
panel.grid(h = 3, v = 3)
panel.xyplot(...)
})
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
layout = c(1,2)
panel = function(x, y) {
panel.grid(h = 5, v = 1)
panel.xyplot(...)
})
g <-    ggplot(stepsinterval2, aes(interval, steps)) +
geom_line() +
facet_wrap(~daytype, ncol=1)
g
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
layout = c(1,2)
panel = function(x, y) {
panel.grid(h = 5, v = 1)
panel.xyplot(...)
})
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
layout = c(1,2)
panel = function(x, y) {
panel.grid(h = 5, v = 1)
panel.xyplot(...)
})
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
layout = c(1,2),
panel = function(x, y) {
panel.grid(h = 5, v = 1)
panel.xyplot(...)
})
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
layout = c(1,2)
panel = function(x, y) {
panel.grid(h = 3, v = 3)
panel.xyplot(...)
})
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
panel = function(x, y) {
panel.grid(h = 3, v = 3)
panel.xyplot(...)
})
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
layout = c(1,2),
panel = function(x, y) {
panel.grid(h = 3, v = 3)
panel.xyplot(...)
})
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
layout = c(1,2),
panel = function(x, y) {
panel.grid(h = -1, v = -1)
panel.xyplot(...)
})
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
layout = c(1,2),
panel = function(x, y) {
panel.grid(h = -1, v = -1),
panel.xyplot(...)
})
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
layout = c(1,2),
panel = function(x, y) {
panel.grid(h = -1, v = -1)
})
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
layout = c(1,2),
panel = function(x, y) {
panel.grid(h = -1, v = -1)
panel.xyplot(...)
})
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
layout = c(1,2),
panel = function(x, y) {
args <- list(...)
panel.grid(h = -1, v = -1)
panel.xyplot(...)
})
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
layout = c(1,2),
panel = function(...) {
args <- list(...)
panel.grid(h = -1, v = -1)
panel.xyplot(...)
})
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
layout = c(1,2),
panel = function(...) {
args <- list(...)
panel.grid(h = -1, v = -1)
panel.xyplot(...)
})
g <-    ggplot(stepsinterval2, aes(interval, steps)) +
geom_line() +
facet_wrap(~daytype, ncol=1)
g
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
layout = c(1,2),
panel = function(...) {
args <- list(...)
panel.grid(h = -1, v = -1)
panel.xyplot(...)
})
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
layout = c(1,2),
panel = function(...) {
panel.grid(h = -1, v = -1)
panel.xyplot(...)
})
g <-    ggplot(stepsinterval2, aes(interval, steps)) +
geom_line() +
facet_wrap(~daytype, ncol=1)
g
xyplot(steps~interval | daytype, data = stepsinterval2,
type = 'l',
xlab = 'Interval',
ylab = 'Number of Steps',
layout = c(1,2),
panel = function(...) {
panel.grid(h = -1, v = -1)
panel.xyplot(...)
})
